package ru.fait.practicalwork;

import java.util.Arrays;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Богатырев Иван
 */
public class OrdersRequestDialog extends javax.swing.JDialog {

    static Vector stockData;
    static Vector goodsData;
    static Vector supData;
    static Vector cusData;
    static Vector empData;
    Vector newTable;
    Vector cloneTable = new Vector();
    final static String[] strColNames = {"Дата поступления", "Дата заказа", "Дата отпраки",
        "Код типа", "Производитель", "Наименование",
        "Наименование поставщика",
        "Наименование заказчика",
        "Способ доставки", "Объем", "Цена",
        "Имя сотрудника"};
    Vector<String> colNames = new Vector<String>(Arrays.asList(strColNames));

    /**
     * Creates new form requestDialog
     */
    public OrdersRequestDialog(java.awt.Frame parent, boolean modal, Vector v1, Vector v2, Vector v3, Vector v4, Vector v5) {
        super(parent, modal);
        initComponents();
        stockData = v1;
        goodsData = v2;
        supData = v3;
        cusData = v4;
        empData = v5;
        newTable = new Vector();
        for (int i = 0; i < stockData.size(); i++) {
            Vector temp1 = (Vector) stockData.get(i);
            Vector newLine = new Vector();
            for (int k = 0; k < 3; k++) {
                newLine.add(temp1.get(k));
            }
            for (int j = 0; j < goodsData.size(); j++) {
                Vector temp2 = (Vector) goodsData.get(j);
                if (temp1.get(3).equals(temp2.get(0))) {
                    for (int k = 1; k < 4; k++) {
                        newLine.add(temp2.get(k));
                    }
                }
            }
            for (int j = 0; j < supData.size(); j++) {
                Vector temp2 = (Vector) supData.get(j);
                if (temp1.get(4).equals(temp2.get(0))) {
                    newLine.add(temp2.get(1));
                }
            }

            for (int j = 0; j < cusData.size(); j++) {
                Vector temp2 = (Vector) cusData.get(j);
                if (temp1.get(5).equals(temp2.get(0))) {
                    newLine.add(temp2.get(1));
                }
            }

            for (int k = 6; k < 9; k++) {
                newLine.add(temp1.get(k));
            }

            for (int j = 0; j < empData.size(); j++) {
                Vector temp2 = (Vector) empData.get(j);
                if (temp1.get(9).equals(temp2.get(0))) {
                    newLine.add(temp2.get(1));
                }
            }

            newTable.add(newLine);
        }
        requestTable.setModel(new DefaultTableModel(newTable, colNames));
        System.out.println(newTable.toString());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        requestTable = new javax.swing.JTable();
        supFilterField = new javax.swing.JTextField();
        supFilterLabel = new javax.swing.JLabel();
        custFilterLabel = new javax.swing.JLabel();
        deliveryFilterLabel = new javax.swing.JLabel();
        deliveryFilterField = new javax.swing.JTextField();
        custFilterField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        requestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(requestTable);

        supFilterField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supFilterFieldActionPerformed(evt);
            }
        });

        supFilterLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        supFilterLabel.setText("Поставщик:");

        custFilterLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        custFilterLabel.setText("Заказчик:");

        deliveryFilterLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        deliveryFilterLabel.setText("Способ доставки:");

        deliveryFilterField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deliveryFilterFieldActionPerformed(evt);
            }
        });

        custFilterField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                custFilterFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(supFilterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(supFilterField, javax.swing.GroupLayout.PREFERRED_SIZE, 1010, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(custFilterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(custFilterField, javax.swing.GroupLayout.PREFERRED_SIZE, 1010, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(deliveryFilterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deliveryFilterField, javax.swing.GroupLayout.PREFERRED_SIZE, 1010, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(supFilterLabel)
                    .addComponent(supFilterField, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(custFilterLabel)
                    .addComponent(custFilterField, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deliveryFilterLabel)
                    .addComponent(deliveryFilterField, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void supFilterFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supFilterFieldActionPerformed
        // TODO add your handling code here:
        search();
    }//GEN-LAST:event_supFilterFieldActionPerformed

    private void deliveryFilterFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deliveryFilterFieldActionPerformed
        // TODO add your handling code here:
        search();
    }//GEN-LAST:event_deliveryFilterFieldActionPerformed

    private void custFilterFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_custFilterFieldActionPerformed
        // TODO add your handling code here:
        search();
    }//GEN-LAST:event_custFilterFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrdersRequestDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrdersRequestDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrdersRequestDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrdersRequestDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                OrdersRequestDialog dialog = new OrdersRequestDialog(new javax.swing.JFrame(), true, stockData, goodsData, supData, cusData, empData);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });

    }

    void search() {
        Vector copy = (Vector) newTable.clone();
        for (int i = 0; i < newTable.size(); i++) {
            Vector temp = (Vector) newTable.get(i);
            if (!supFilterField.getText().trim().replaceAll("\n", "").isEmpty()
                    && !temp.get(6).toString().equalsIgnoreCase(supFilterField.getText())) {
                copy.remove(temp);
            } else if (!custFilterField.getText().trim().replaceAll("\n", "").isEmpty()
                    && !temp.get(7).toString().equalsIgnoreCase(custFilterField.getText())) {
                copy.remove(temp);
            } else if (!deliveryFilterField.getText().trim().replaceAll("\n", "").isEmpty()
                    && !temp.get(8).toString().equalsIgnoreCase(deliveryFilterField.getText())) {
                copy.remove(temp);
            } else {
            }
            requestTable.setModel(new DefaultTableModel(copy, colNames));
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField custFilterField;
    private javax.swing.JLabel custFilterLabel;
    private javax.swing.JTextField deliveryFilterField;
    private javax.swing.JLabel deliveryFilterLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable requestTable;
    private javax.swing.JTextField supFilterField;
    private javax.swing.JLabel supFilterLabel;
    // End of variables declaration//GEN-END:variables
}
